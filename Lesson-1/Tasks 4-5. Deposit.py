# Задача 4 - 5
"""
Клиент банка делает депозит на определенный срок.

В зависимости от суммы и срока вклада определяется процентная ставка:
1000–10000 руб (6 месяцев — 5 % годовых, год — 6 % годовых, 2 и более года — 5 % годовых).
10000–100000 руб (6 месяцев — 6 % годовых, год — 7 % годовых, 2 и более года – 6.5 % годовых).
100000–1000000 руб (6 месяцев — 7 % годовых, год — 8 % годовых, 2 и более года — 7.5 % годовых).

Проценты начисляются на депозит в конце каждого месяца.

Необходимо написать функцию, в которую будут передаваться параметры: сумма вклада и срок вклада (в месяцах),
а на выходе возвращать сумму вклада на конец срока.

Задача 5
Усовершенствовать программу «Банковский депозит».
Третьим аргументом в функцию должна передаваться фиксированная ежемесячная сумма пополнения вклада.
Считаем, что клиент вносит средства в последний день каждого
"""

# ---- Создадим базу параметров депозитов

# Условия по депозитам, определенные задачей
deposit_conditions = [
    (1, 999, 10000, {6: 0.05, 12: 0.06, 24: 0.05}),
    (2, 10000, 100000, {6: 0.06, 12: 0.07, 24: 0.065}),
    (3, 100000, 1000000, {6: 0.07, 12: 0.08, 24: 0.075})
]


def get_period(period):
    """
    Вспомогательная функция для определения периода по условию задачи
    :param period: количество периодов
    :return: условный номер периода, по которому берется % ставка
    """
    g = [(0, 6, 6), (6, 12, 6), (12, 24, 12), (24, 9999, 24)]
    period = list(filter(lambda x: x[0] < period <= x[1], g))[0]
    return list(period)[2]


def future_value_deposit(value, period, pmt=0, report=False):
    """
    Определяет будущую стоимость депозита и возможных взносов по условиям задачи
    :param value: первоначальная сумма вклада
    :param period: период вклада
    :param pmt: ежемесячная сумма пополнения вклада впоследний день месяца (без последнего)
    :param report: если True, то выводится текст, а если нет, то сумма
    :return:
    """
    selected_deposit = list(filter(lambda x: x[1] < value <= x[2],
                                   deposit_conditions))[0]
    interest_rate = selected_deposit[3][get_period(period)]
    # 1. Расчет для основной суммы депозита - проводим
    # с капитализацией процентов, начисляемых ежемесячно - используется сложный процент
    result_main = round(value * (1 + interest_rate/12)**period, 2)

    # 2. Расчет будущей стоимости периодических вложений учитывает
    # факт начисления в конце месяца без последнего периода
    result_pmt = round((1 + interest_rate/12) * pmt *
                       ((1 + interest_rate / 12)**(period - 1) - 1)
                       / (interest_rate / 12), 2)

    result = round(result_main + result_pmt, 2)

    # Если report передан True, то выведем отчет:
    if report:
        report_main = f'Вклад на начало периода: {value} Условия: {period} мес. под {interest_rate * 100}%' \
                      f' годовых c ежемесячной капитализацией\nНа конец периода составит: {result_main} \n'
        report_pmt = f'При ежемесячном пополнении вклада в конце месяца (без последнего периода) на {pmt} руб. '\
                     f'будет дополнительного накоплено {result_pmt} руб.\n' if pmt else ''

        report_all = report_main + report_pmt + f'Общая сумма составит: {result}'
        return report_all
    else:
        return result


# Проверка результатов:
print(future_value_deposit(1000, 12, 100, report=True), end='\n\n')
print(future_value_deposit(10000, 12, 1200, report=True), end='\n\n')
print(future_value_deposit(777777, 36, 50000, report=True), end='\n\n')
